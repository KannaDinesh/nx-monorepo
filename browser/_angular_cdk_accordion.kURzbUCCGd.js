import*as i from"@angular/core";import{InjectionToken as l,inject as o,booleanAttribute as d,ChangeDetectorRef as p,EventEmitter as s}from"@angular/core";import{_IdGenerator as a}from"@angular/cdk/a11y";import{UniqueSelectionDispatcher as h}from"@angular/cdk/collections";import{Subject as r,Subscription as u}from"rxjs";var c=new l("CdkAccordion"),v=(()=>{class e{_stateChanges=new r;_openCloseAllActions=new r;id=o(a).getId("cdk-accordion-");multi=!1;openAll(){this.multi&&this._openCloseAllActions.next(!0)}closeAll(){this._openCloseAllActions.next(!1)}ngOnChanges(t){this._stateChanges.next(t)}ngOnDestroy(){this._stateChanges.complete(),this._openCloseAllActions.complete()}static \u0275fac=function(n){return new(n||e)};static \u0275dir=i.\u0275\u0275defineDirective({type:e,selectors:[["cdk-accordion"],["","cdkAccordion",""]],inputs:{multi:[2,"multi","multi",d]},exportAs:["cdkAccordion"],features:[i.\u0275\u0275ProvidersFeature([{provide:c,useExisting:e}]),i.\u0275\u0275NgOnChangesFeature]})}return e})(),D=(()=>{class e{accordion=o(c,{optional:!0,skipSelf:!0});_changeDetectorRef=o(p);_expansionDispatcher=o(h);_openCloseAllSubscription=u.EMPTY;closed=new s;opened=new s;destroyed=new s;expandedChange=new s;id=o(a).getId("cdk-accordion-child-");get expanded(){return this._expanded}set expanded(t){if(this._expanded!==t){if(this._expanded=t,this.expandedChange.emit(t),t){this.opened.emit();let n=this.accordion?this.accordion.id:this.id;this._expansionDispatcher.notify(this.id,n)}else this.closed.emit();this._changeDetectorRef.markForCheck()}}_expanded=!1;disabled=!1;_removeUniqueSelectionListener=()=>{};constructor(){}ngOnInit(){this._removeUniqueSelectionListener=this._expansionDispatcher.listen((t,n)=>{this.accordion&&!this.accordion.multi&&this.accordion.id===n&&this.id!==t&&(this.expanded=!1)}),this.accordion&&(this._openCloseAllSubscription=this._subscribeToOpenCloseAllActions())}ngOnDestroy(){this.opened.complete(),this.closed.complete(),this.destroyed.emit(),this.destroyed.complete(),this._removeUniqueSelectionListener(),this._openCloseAllSubscription.unsubscribe()}toggle(){this.disabled||(this.expanded=!this.expanded)}close(){this.disabled||(this.expanded=!1)}open(){this.disabled||(this.expanded=!0)}_subscribeToOpenCloseAllActions(){return this.accordion._openCloseAllActions.subscribe(t=>{this.disabled||(this.expanded=t)})}static \u0275fac=function(n){return new(n||e)};static \u0275dir=i.\u0275\u0275defineDirective({type:e,selectors:[["cdk-accordion-item"],["","cdkAccordionItem",""]],inputs:{expanded:[2,"expanded","expanded",d],disabled:[2,"disabled","disabled",d]},outputs:{closed:"closed",opened:"opened",destroyed:"destroyed",expandedChange:"expandedChange"},exportAs:["cdkAccordionItem"],features:[i.\u0275\u0275ProvidersFeature([{provide:c,useValue:void 0}])]})}return e})(),y=(()=>{class e{static \u0275fac=function(n){return new(n||e)};static \u0275mod=i.\u0275\u0275defineNgModule({type:e});static \u0275inj=i.\u0275\u0275defineInjector({})}return e})();export{c as CDK_ACCORDION,v as CdkAccordion,D as CdkAccordionItem,y as CdkAccordionModule};
